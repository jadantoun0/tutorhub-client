import { apiSlice } from "./apiSlice";


export const appointmentsSlice = apiSlice.injectEndpoints({
    endpoints: (builder) => ({
        // to retrieve all appointments for a user 
        getAppointments: builder.query({
            query: () => '/appointments', 
            // transforming returned ISO String date to a JS date object
            transformResponse: (response) => {
                return response.map((appointment) => ({
                    ...appointment,
                    date: new Date(appointment.date)
                }))
            }, 
            // to cache data under key "Appointments"
            providesTags: ['Appointments'] 
        }),
        getPendingAppointments: builder.query({
            query: () => '/appointments/pending', // to retrieve all pending appointments for a user
            providesTags: ['PendingAppointments'] // to cache data under key "PendingAppointments"
        }),
        // to create a new appointment, 
        // since we dont want to send a GET request, we use "mutation" instead of "query"  
        createAppointment: builder.mutation({
            query: (newAppointent) => ({
                url: '/appointments', 
                method: 'POST',
                body: newAppointent,
            }),
            // to remove data cached under key "PendingAppointments" as a new pending appointment 
            // was created
            invalidatesTags: ['PendingAppointments'] 
        }),
        // to accept a pending appointment
        acceptAppointment: builder.mutation({
            query: (appointmentId) => ({
                url: `/appointments/accept/${appointmentId}`,
                method: 'PUT'
            }),
            // to remove data cached under key "Appointments" and "PendingAppointments" 
            // as they were modified
            invalidatesTags: ['Appointments', 'PendingAppointments'] 
        }),
        // to accept a pending appointment
        deleteAppointment: builder.mutation({
            query: (appointmentId) => ({
                url: `/appointments/${appointmentId}`,
                method: 'DELETE'
            }),
            // to remove data cached under key "Appointments" and "PendingAppointments" 
            // as they were modified
            invalidatesTags: ['Appointments', 'PendingAppointments'] 
        })
    })
})

// exporting hooks generated by redux to interact with data
export const {
    useGetAppointmentsQuery,
    useGetPendingAppointmentsQuery,
    useCreateAppointmentMutation,
    useAcceptAppointmentMutation,
    useDeleteAppointmentMutation
} = appointmentsSlice;
